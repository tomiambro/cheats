% django

$ project_name
$ projects_path: pwd

# Create command structure
mkdir management && cd management
touch __init__.py
mkdir commands && cd commands
touch __init__.py


# Create drf api folder structure
mkdir api && cd api
touch __init__.py
mkdir serializers && cd serializers
touch __init__.py
cd ../
mkdir views && cd views
touch __init__.py

# Create super user
docker-compose -f local.yml run django ./manage.py migrate
docker-compose -f local.yml run django ./manage.py createsuperuser

# Reset django db
docker-compose -f local.yml run django ./manage.py reset_db --no-input
docker-compose -f local.yml run django ./manage.py migrate
docker-compose -f local.yml run django ./manage.py createsuperuser --email tomas@example.com

# Run django cookiecutter
cookiecutter gh:tomiambro/cookiecutter-django
cd <projects_path>/<project_folder> && docker-compose -f local.yml run django black . && docker-compose -f local.yml run django isort --atomic .
cd <projects_path>/<project_folder> && docker-compose -f local.yml run django ./manage.py migrate && docker-compose -f local.yml run django ./manage.py createsuperuser --username tomas --email tomas@example.com
cd <projects_path>/<project_folder> && git init && pre-commit install && git add . && git commit -m "initial commit" && gh repo create --public --source=. --push
